#pragma once

//#include "Adafruit_MCP4725.h"
//#include "EEPROM.h"
//#include "LiquidCrystal_I2C.h"
//#include "OneButton.h"
//#include "OneWire.h" //DS18B20
//#include "Wire.h"

#include "ds18b20.h"
#include "mbed.h"

class Bp {
public:
    Bp();

private:
    Timeout timeout1;
    Timeout timeout2;
    Timeout timeout3;
    Timeout timeout4;

    InterruptIn button1; // увеличиваем напряжение, ток
    InterruptIn button2; // уменьшаем напряжение, ток
    InterruptIn button3; // выбор значения, меню
    InterruptIn button4; // отключаем выход БП

    AnalogOut Udac;
    AnalogOut Idac;

    DS18B20 ds; // Объект OneWire

    uint8_t gradus[8] = // кодируем символ градуса
        {
            0b01110,
            0b01010,
            0b01110,
            0b00000,
            0b00000,
            0b00000,
            0b00000,
        };

    constexpr static const char NAME[] = "LBP";
    constexpr static const char DEVICE[] = "by IVAN-KLUCH";
    constexpr static const char VERSION[] = "1.1 DAC";

    DigitalOut RelayOut; // = 4; // реле подаем напряжение на выход
    DigitalOut Relay1; //  = 10; // переключение обмоток 1-е реле
    DigitalOut Relay2; //  = 11; // переключение обмоток 2-е реле
    DigitalOut Relay3; // = 12; // переключение обмоток 3-е реле
    DigitalOut fan; //  = 5; // управление вентилятором
    PwmOut buzzer; //  = 3; // сигнал спикера
    DigitalOut RelayOff; //= A3; // сигнал автоотключения

    int addressU
        = 0; // Начальный адресс ячейки памяти для напряжения
    int addressI = 2; // Начальный адресс ячейки памяти для тока

    int adr_A_Uout = 4; // Начальный адресс ячейки памяти для цифр напряжения (переменная float) 1-й блок
    int adr_A_Udac = 8; // Начальный адресс ячейки памяти для значения ЦАП напряжения (переменная int) 1-й блок
    int adr_A_Iout = 10; // Начальный адресс ячейки памяти для цифр тока (переменная float) 1-й блок
    int adr_A_Idac = 14; // Начальный адресс ячейки памяти для значения ЦАП тока (переменная int) 1-й блок

    int adr_B_Uout = 16; // Начальный адресс ячейки памяти для цифр напряжения (переменная float) 2-й блок
    int adr_B_Udac = 20; // Начальный адресс ячейки памяти для значения ЦАП напряжения (переменная int) 2-й блок
    int adr_B_Iout = 22; // Начальный адресс ячейки памяти для цифр тока (переменная float) 2-й блок
    int adr_B_Idac = 26; // Начальный адресс ячейки памяти для значения ЦАП тока (переменная int) 2-й блок

    int adr_C_Uout = 28; // Начальный адресс ячейки памяти для цифр напряжения (переменная float) 3-й блок
    int adr_C_Udac = 32; // Начальный адресс ячейки памяти для значения ЦАП напряжения (переменная int) 3-й блок
    int adr_C_Iout = 34; // Начальный адресс ячейки памяти для цифр тока (переменная float) 3-й блок
    int adr_C_Idac = 38; // Начальный адресс ячейки памяти для значения ЦАП тока (переменная int) 3-й блок

    int adr_D_Uout = 40; // Начальный адресс ячейки памяти для цифр напряжения (переменная float) 4-й блок
    int adr_D_Udac = 44; // Начальный адресс ячейки памяти для значения ЦАП напряжения (переменная int) 4-й блок
    int adr_D_Iout = 46; // Начальный адресс ячейки памяти для цифр тока (переменная float) 4-й блок
    int adr_D_Idac = 50; // Начальный адресс ячейки памяти для значения ЦАП тока (переменная int) 4-й блок

    int adr_E_Uout = 52; // Начальный адресс ячейки памяти для цифр напряжения (переменная float) 5-й блок
    int adr_E_Udac = 56; // Начальный адресс ячейки памяти для значения ЦАП напряжения (переменная int) 5-й блок
    int adr_E_Iout = 58; // Начальный адресс ячейки памяти для цифр тока (переменная float) 5-й блок
    int adr_E_Idac = 62; // Начальный адресс ячейки памяти для значения ЦАП тока (переменная int) 5-й блок

    float Ufix_A = 0.0; // переменная для цифр фиксированого напряжения 1-й блок
    int Ufix_dac_A = 0; // переменая значения ЦАП для напряжения 1-й блок
    float Ifix_A = 0.0; // переменная для фиксированого тока 1-й блок
    int Ifix_dac_A = 0; // переменая значения ЦАП для тока 1-й блок

    float Ufix_B = 0.0; // переменная для цифр фиксированого напряжения 2-й блок
    int Ufix_dac_B = 0; // переменая значения ЦАП для напряжения 2-й блок
    float Ifix_B = 0.0; // переменная для фиксированого тока 2-й блок
    int Ifix_dac_B = 0; // переменая значения ЦАП для тока 2-й блок

    float Ufix_C = 0.0; // переменная для цифр фиксированого напряжения 3-й блок
    int Ufix_dac_C = 0; // переменая значения ЦАП для напряжения 3-й блок
    float Ifix_C = 0.0; // переменная для фиксированого тока 3-й блок
    int Ifix_dac_C = 0; // переменая значения ЦАП для тока 3-й блок

    float Ufix_D = 0.0; // переменная для цифр фиксированого напряжения 4-й блок
    int Ufix_dac_D = 0; // переменая значения ЦАП для напряжения 4-й блок
    float Ifix_D = 0.0; // переменная для фиксированого тока 4-й блок
    int Ifix_dac_D = 0; // переменая значения ЦАП для тока 4-й блок

    float Ufix_E = 0.0; // переменная для цифр фиксированого напряжения 5-й блок
    int Ufix_dac_E = 0; // переменая значения ЦАП для напряжения 5-й блок
    float Ifix_E = 0.0; // переменная для фиксированого тока 5-й блок
    int Ifix_dac_E = 0; // переменая значения ЦАП для тока 5-й блок

    float U_Preset = 0; // переменная для вывода на дисплей напряжения (при выборе фиксированных значений)
    float I_Preset = 0; // переменная для вывода на дисплей тока (при выборе фиксированных значений)

    int temperature = 0; // переменная для хранения значение температуры с датчика DS18B20
    long lastUpdateTime = 0; // Переменная для хранения времени последнего считывания с датчика
    const int TEMP_UPDATE_TIME = 1; // Определяем периодичность проверок сек
    AnalogIn VOLTAGE; // = A0;
    AnalogIn CURRENT; // = A6;
    float CoefU = 7.921f; // коэффициент делителя напряжения CoefU=Uout(max)/5v.опорное
    float CoefI = 0.838f; // коэффициент делителя тока CoefI=Iout/5v опорное
    float Uout = 0;
    float Iout = 0;
    float Ucorr = 0;
    float Ucalc = 0;
    float U_relay_on = 20.0; // напряжение включения реле (переключение обмоток)
    float U_relay_off = 19.5; // напряжение отключения реле (переключение обмоток)
    float Ref_vol = 5.05f; // опорное напряжение
    //float set_Iout = 0;
    int VOLTAGE_DAC = 0; // установка напряжения, 8отсчет в диапазоне 0-4095
    int CURRENT_DAC = 0; //установка тока, отсчет в диапазоне 0-4095
    float CURRENT_SET = 0; // переменная установленного тока
    int value_max = 4052; // максимальное значение
    int value_min = 10; // минимальное значение
    int value_max_I = 4070; // максимальное значение (ток)
    int value_min_I = 10; // минимальное значение  (ток)
    int set = 0; // пункты меню
    int menu = 0; // меню
    int preset_select = 1; // блоки фикированных напряжений
    int set_fix_val = 0; // настройка фиксированных значений
    int output_control = 0; // управление выходом БП
    unsigned long store_exit_time; // храним врема выхода из меню
    const int exit_time = 4000; // устанавливаем время выхода из меню
    uint16_t freq_sw = 2000; // часота тона при нажатии кнопок
    uint16_t freq_alarm = 1500; // частота тона, сигнал тревоги
    uint16_t time_sw = 20; // длительность тона при нажатии кнопок
    uint16_t time_alarm = 500; // длительность тона, сигнал тревоги
    uint8_t timer_off;
    uint8_t timer_off_set = 30;
    //uint8_t var = 0;
    unsigned long store_countdown_timer; // храним время автоотключения
    const int countdown_timer = 10; // устанавливаем время автоотключения в минутах
    unsigned long store_shutdown_time; // храним время обратного отсчета
    const int shutdown_time = 1000; // время обратного отсчета 1 сек.
    //-------------------------------------------------------------------
    void setup(); //конец setup

    void loop(); //конец loop
    //-------------функции для кнопки плюс (один клик)--------------------------
    void click1(); //конец click1()
    //---------------функции для кнопки плюс (непрерывно нажата)----------------
    void longPress1(); //конец longPress1
    //---------------функции для кнопки минус (один клик)--------------------
    void click2(); //конец click2
    //----------------функции для кнопки минус (непрерывно нажата)-------------
    void longPress2(); // конец longPress2
    //-------------------(действия для кнопки меню (один клик)---------------
    void click3(); //конец click3
    //-------------------(действия для кнопки меню (двойной клик)-------------
    void doubleclick3(); // конец doubleclick3
    //------------------(действия для кнопки меню (длительно нажата)-----------
    void longPress3(); // конец longPress3
    //------------------(действия для кнопки отключение выхода (один клик)-------
    void click4(); // конец click4()
    //----------------(действия для кнопки отключение выхода (длительно нажата)------
    void longPress4(); // конец longPress4
    //---------------сигнал спикера-------------
    void signal_attention();
    //------------------функции с фиксированными значениями --------------------------
    void functions_for_fixed_values(); // конец functions_for_fixed_values
    //------------------запись в память фиксированных значений-------------------------
    void record_fixed_values(); // конец record_fixed_values()
    //---------------установка одного из фиксированных значений в активное------------
    void select_fixed_value(); // конец select_fixed_value

    //-------------------отмена автоотключения---------------------------
    void cancel_auto_off();
    //-------------------автоотключение, обратный отсчет-------------------
    void avto_off(); //конец avto_off
    //--------------------мерим температуру-------------------------------
    void detectTemperature();
};
